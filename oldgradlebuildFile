buildscript {
    repositories {
        maven { url "https://maven.minecraftforge.net" }
        maven { url "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

version = rootProject.mod_version
group = rootProject.mod_group //http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = rootProject.mod_name

sourceCompatibility = targetCompatibility = 1.8 //using java 8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false //disable creation of sources jar
    clientJvmArgs = ["-Dfml.coreMods.load=${rootProject.mod_group}.core.CoreMod", "-Dmixin.debug=true"]
}

configurations {
    shade
    implementation.extendsFrom(shade)
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
}

dependencies {
    shade("org.spongepowered:mixin:0.6.4-SNAPSHOT") {
        exclude module: 'gson'
        exclude module: 'guava'
        exclude module: 'jarjar'
        exclude module: 'commons-codec'
        exclude module: 'commons-io'
        exclude module: 'launchwrapper'
        exclude module: 'asm-commons'
        exclude module: 'slf4j-api'
    }
}

processResources {
    //this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    //replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        //replace version and mcversion
        expand "version":project.version, "mcversion":project.minecraft.version
    }

    //copy everything else, that"s not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    from {
        configurations.shade.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }
    manifest.attributes([
            "Specification-Title"        : "examplemod",
            "Specification-Vendor"       : "examplemodsareus",
            "Specification-Version"      : "1", // We are version 1 of ourselves
            "Implementation-Title"       : project.name,
            "Implementation-Version"     : "${version}",
            "Implementation-Vendor"      : "examplemodsareus",
            "Implementation-Timestamp"   : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),

            "TweakClass"                 : "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder"                 : "0",
            "MixinConfigs"               : "${archivesBaseName}.mixins.json",
            'ForceLoadAsMod'             : true,
            'FMLCorePluginContainsFMLMod': true,
            'ModSide'                    : 'CLIENT'
    ])
    classifier "1.8.9"
}